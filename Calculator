<html>
    <style>
        .block {
            width: 320px;
            padding: 10px;
            border: 5px solid gray;
            margin: 0;
        }
        header {
            font-size: 25;
        }
        .underline {
            text-decoration-line: underline;
            text-decoration-color: black;
        }
    </style>
    
    
    
    <div id='testing'>
            
    </div>
    <label for='joist-size-dd'>Joist Size</label>
    <select name= 'joist-size-dd' id='joist-size-dd' onchange='jsFunction(this.value, this.id);'>
        <option value='5.905511805'>6</option>
        <option value='7.87401574'>8</option>
        <option value='9.842519675'>10</option>
        <option value='11.81102361'>12</option>
        <option value='13.779527545'>14</option>
        <option value='15.74803148'>16</option>
        <option value='17.716535415'>18</option>
    </select>
    <br>
    <label for='joist-spacing-dd'>Joist Spacing</label>
    <select name= 'joist-spacing-dd' id='joist-spacing-dd'>
        <option value='1.00000000152'>1</option>
        <option value='2.00000000304'>2</option>
        <option value='3.00000000456'>3</option>
        <option value='4.00000000608'>4</option>
        <option value='5.0000000076'>5</option>
    </select>
    <br>
    <label for='slab-topping-dd'>Joist Spacing</label>
    <select name= 'slab-topping-dd' id='slab-topping-dd'>
        <option value='3.49999999643'>3.5</option>
        <option value='3.99999999592'>4</option>
    </select>
    <br>
    <label for='first-hole-location-dd'>Input Hole Location</label>
    <select name= 'first-hole-location-dd' id='first-hole-location-dd'>
        <option value='3.00000000456'>3.5</option>
        <option value='4.00000000608'>4</option>
    </select>
    <br>
    <label for='sdl-input'>SDL</label>
    <input type='number'  id='sdl-input' name='sdl-input' min='0' max='10' step='1' onchange='CorrectInputValue(this.min, this.max, value, this.id, 1)'>
    <br>
    <label for='live-load-input'>Live Load</label>
    <input type='number' id='live-load-input' name='live-load-input' min='0' max='10'>
    <br>
    <label for='deflection-limit-dd'>Deflection Limit</label>
    <select name='deflection-limit-dd' id='deflection-limit-dd'>
        <option value='360'>360</option>
        <option value='500'>500</option>
    </select>
    <br>
    <button type='button' onclick='SubmitData()'>Submit</button>
    
    <div id='calculated-data'>
        <header>Non-Composite Data</header>
        <label for='joist-non-composite' class='underline'>Joist</label>
        <div id='joist-non-composite'></div>
        <label for='btm-non-composite' class='underline'>BTM</label>
        <div id='btm-non-composite'></div>
        <label for='centroid-Y-non-composite' class='underline'>Centroid Y</label>
        <div id='centroid-Y-non-composite'></div>
        <label for='area-a-non-composite' class='underline'>Area A</label>
        <div id='area-a-non-composite'></div>
        <label for='i-1-non-composite' class='underline'>I1</label>
        <div id='i-1-non-composite'></div>
        <label for='i-2-non-composite' class='underline'>I2</label>
        <div id='i-2-non-composite'></div>
        <label for='i-3-non-composite' class='underline'>I3</label>
        <div id='i-3-non-composite'></div>
        <label for='i-4-non-composite' class='underline'>I4</label>
        <div id='i-4-non-composite'></div>
        <label for='i-5-non-composite' class='underline'>I5</label>
        <div id='i-5-non-composite'></div>
        <label for='i-6-non-composite' class='underline'>I6</label>
        <div id='i-6-non-composite'></div>
        <label for='i-7-non-composite' class='underline'>I7</label>
        <div id='i-7-non-composite'></div>
        <label for='i-8-non-composite' class='underline'>I8</label>
        <div id='i-8-non-composite'></div>
        <label for='i-9-non-composite' class='underline'>I9</label>
        <div id='i-9-non-composite'></div>
        <label for='i-10-non-composite' class='underline'>I10</label>
        <div id='i-10-non-composite'></div>
        <label for='i-non-composite' class='underline'>I</label>
        <div id='i-non-composite'></div>
        <label for='zt-non-composite' class='underline'>Zt</label>
        <div id='zt-non-composite'></div>
        <label for='zb-non-composite' class='underline'>Zb</label>
        <div id='zb-non-composite'></div>
        <label for='phi-non-composite' class='underline'>phi</label>
        <div id='phi-non-composite'></div>
        <label for='phim-non-composite' class='underline'>phiM</label>
        <div id='phim-non-composite'></div>
        <label for='circular-hole-non-composite' class='underline'>Circular Hole dwh</label>
        <div id='circular-hole-non-composite'></div>
        <label for='non-circular-hole-non-composite' class='underline'>Non Circular Hole dwh</label>
        <div id='non-circular-hole-non-composite'></div>
        <label for='circular-hole-non-composite' class='underline'>Circular Hole dwh</label>
        <div id='circular-hole-non-composite'></div>
        <label for='fy-non-composite' class='underline'>fy</label>
        <div id='fy-non-composite'></div>
        <label for='e-non-composite' class='underline'>E</label>
        <div id='e-non-composite'></div>
        <label for='v-non-composite' class='underline'>V</label>
        <div id='v-non-composite'></div>
        <label for='k-non-composite' class='underline'>k</label>
        <div id='k-non-composite'></div>
        <label for='t-non-composite' class='underline'>t</label>
        <div id='t-non-composite'></div>
        <label for='b-non-composite' class='underline'>b</label>
        <div id='b-non-composite'></div>
        <label for='fcr-non-composite' class='underline'>fcr</label>
        <div id='fcr-non-composite'></div>
        <label for='f-asterisk-non-composite' class='underline'>f*</label>
        <div id='f-asterisk-non-composite'></div>
        <label for='lamda-non-composite' class='underline'>lamda</label>
        <div id='lamda-non-composite'></div>
        <label for='p-non-composite' class='underline'>p</label>
        <div id='p-non-composite'></div>
        <label for='be-non-composite' class='underline'>be</label>
        <div id='be-non-composite'></div>
        <label for='psi-non-composite' class='underline'>psi</label>
        <div id='psi-non-composite'></div>
        <label for='be-1-non-composite' class='underline'>be1</label>
        <div id='be-1-non-composite'></div>
        <label for='be-2-non-composite' class='underline'>be2</label>
        <div id='be-2-non-composite'></div>
        <label for='i-51-non-composite' class='underline'>I51</label>
        <div id='i-51-non-composite'></div>
        <label for='d-52-non-composite' class='underline'>d52</label>
        <div id='d-52-non-composite'></div>
        <label for='i-52-non-composite' class='underline'>I52</label>
        <div id='i-52-non-composite'></div>
        <label for='kv-non-composite' class='underline'>kv</label>
        <div id='kv-non-composite'></div>
        <label for='d-1-non-composite' class='underline'>d1</label>
        <div id='d-1-non-composite'></div>
        <label for='d-1-over-t-non-composite' class='underline'>d1/t</label>
        <div id='d-1-over-t-non-composite'></div>
        <label for='ekv-Over-fy-non-composite' class='underline'>sqrt(Ekv/fy)</label>
        <div id='ekv-Over-fy-non-composite'></div>
        <label for='q1-non-composite' class='underline'>Q1</label>
        <div id='q1-non-composite'></div>
        <label for='q2-non-composite' class='underline'>Q2</label>
        <div id='q2-non-composite'></div>
        <label for='q3-non-composite' class='underline'>Q3</label>
        <div id='q3-non-composite'></div>
        <label for='q4-non-composite' class='underline'>Q4</label>
        <div id='q4-non-composite'></div>
        <label for='q5-non-composite' class='underline'>Q5</label>
        <div id='q5-non-composite'></div>
        <label for='q-non-composite' class='underline'>Q</label>
        <div id='q-non-composite'></div>
        <label for='phi-non-composite-2' class='underline'>phi</label>
        <div id='phi-non-composite-2'></div>
        <label for='phi-hole-non-composite' class='underline'>phi-hole</label>
        <div id='phi-hole-non-composite'></div>
        <label for='phiv-non-composite' class='underline'>phiV</label>
        <div id='phiv-non-composite'></div>
        <label for='phiv-cir-hole-non-composite' class='underline'>phiV-cir hole</label>
        <div id='phiv-cir-hole-non-composite'></div>
        <label for='phiv-non-cir-hole-non-composite' class='underline'>phiV-noncir hole</label>
        <div id='phiv-non-cir-hole-non-composite'></div>
        <label for='t-over-d1-times-ekv-over-fy-non-composite' class='underline'>(t/d1)*sqrt(2Ekv/fy)</label>
        <div id='t-over-d1-times-ekv-over-fy-non-composite'></div>
        <label for='d1-over-t-times-fy-over-ekv-non-composite' class='underline'>(d1/t)*sqrt(fy/Ekv)</label>
        <div id='d1-over-t-times-fy-over-ekv-non-composite'></div>
        <label for='ekv-over-fy-multiplied-non-composite' class='underline'>1.415sqrt(Ekv/fy)</label>
        <div id='ekv-over-fy-multiplied-non-composite'></div>
        <label for='ekvfy1-non-composite' class='underline'>0.64tw^2*sqrt(Ekvfy)</label>
        <div id='ekvfy1-non-composite'></div>
        <label for='c-circular-non-composite' class='underline'>c-circular</label>
        <div id='c-circular-non-composite'></div>
        <label for='qs-circular-non-composite' class='underline'>qs-circular</label>
        <div id='qs-circular-non-composite'></div>
        <label for='vcr-non-composite' class='underline'>Vcr</label>
        <div id='vcr-non-composite'></div>
        <label for='vy-non-composite' class='underline'>Vy</label>
        <div id='vy-non-composite'></div>
        <label for='lamda-v-non-composite' class='underline'>lamda v</label>
        <div id='lamda-v-non-composite'></div>
        <label for='ekvfy2-non-composite' class='underline'>0.6tw^2*sqrt(Ekvfy)</label>
        <div id='ekvfy2-non-composite'></div>
        <label for='c-noncircular-non-composite' class='underline'>c-noncircular</label>
        <div id='c-noncircular-non-composite'></div>
        <label for='qs-noncircular-non-composite' class='underline'>qs-noncircular</label>
        <div id='qs-noncircular-non-composite'></div>
        <label for='ø-non-composite' class='underline'>ø - Capacity reduction factor</label>
        <div id='ø-non-composite'></div>
        <label for='a-non-composite' class='underline'>A - Full cross section area</label>
        <div id='a-non-composite'></div>
        <label for='cb-non-composite' class='underline'>Cb - Unbraced segment moment distribution coefficient</label>
        <div id='cb-non-composite'></div>
        <label for='fol-non-composite' class='underline'>fol - Elastic local buckling stress</label>
        <div id='fol-non-composite'></div>
        <label for='fod-non-composite' class='underline'>fod - Elastic distorsional buckling stress</label>
        <div id='fod-non-composite'></div>
        <label for='fy-non-composite2' class='underline'>fy - Yield stress</label>
        <div id='fy-non-composite2'></div>
        <label for='g-non-composite' class='underline'>G - Shear modulus</label>
        <div id='g-non-composite'></div>
        <label for='j-non-composite' class='underline'>J - Torsion constant</label>
        <div id='j-non-composite'></div>
        <label for='zc-non-composite' class='underline'>Zc - Effective section modulus in bending at yield Zxe</label>
        <div id='zc-non-composite'></div>
        <label for='iex-non-composite' class='underline'>Iex - Effective length, x axis</label>
        <div id='iex-non-composite'></div>
        <label for='iey-non-composite' class='underline'>Iey - Effective length, y axis</label>
        <div id='iey-non-composite'></div>
        <label for='iez-non-composite' class='underline'>Iez - Effective length, twisting</label>
        <div id='iez-non-composite'></div>
        <label for='iw-non-composite' class='underline'>Iw - Warping constant</label>
        <div id='iw-non-composite'></div>
        <label for='rx-non-composite' class='underline'>rx - Radius of gyration</label>
        <div id='rx-non-composite'></div>
        <label for='ry-non-composite' class='underline'>ry - Radius of gyration</label>
        <div id='ry-non-composite'></div>
        <label for='x0-non-composite' class='underline'>X0 - Dimension, shear centre to centroid</label>
        <div id='x0-non-composite'></div>
        <label for='zf-non-composite' class='underline'>Zf - Unreduced section modulus, Zf = Zx </label>
        <div id='zf-non-composite'></div>
        <label for='y0-non-composite' class='underline'>y0 - Dimension, shear centre to centroid</label>
        <div id='y0-non-composite'></div>
        <label for='rol-non-composite' class='underline'>rol - Polar radius of gyrations of the cross-section about the shear centre</label>
        <div id='rol-non-composite'></div>
        <label for='foy-non-composite' class='underline'>foy - Y axis elastic buckling stress</label>
        <div id='foy-non-composite'></div>
        <label for='foz-non-composite' class='underline'>foz - Torsional elastic buckling stress</label>
        <div id='foz-non-composite'></div>
        <label for='mo-non-composite' class='underline'>Mo - Elastic buckling moment</label>
        <div id='mo-non-composite'></div>
        <label for='my-non-composite' class='underline'>My - Moment causing initial yield at the extreme compression fibre of a full section</label>
        <div id='my-non-composite'></div>
        <label for='λb-non-composite' class='underline'>λb - Non-dimensional slenderness</label>
        <div id='λb-non-composite'></div>
        <label for='mc-non-composite' class='underline'>Mc - Critical moment</label>
        <div id='mc-non-composite'></div>
        <label for='mbe-non-composite' class='underline'>Mbe - Nominal member capacity for lateral-torsional buckling</label>
        <div id='mbe-non-composite'></div>
        <label for='mol-non-composite' class='underline'>Mol - Elastic local buckling moment</label>
        <div id='mol-non-composite'></div>
        <label for='λl-non-composite' class='underline'>λl - Non-dimensional slenderness</label>
        <div id='λl-non-composite'></div>
        <label for='mbl-non-composite' class='underline'>Mbl - Nominal member capacity for local buckling</label>
        <div id='mbl-non-composite'></div>
        <label for='mod-non-composite' class='underline'>Mod - Elastic buckling moment in the distortional mode</label>
        <div id='mod-non-composite'></div>
        <label for='λd-non-composite' class='underline'>λd - Non-dimensional slenderness</label>
        <div id='λd-non-composite'></div>
        <label for='mbd-non-composite' class='underline'>Mbd - Nominal member capacity for distortional buckling</label>
        <div id='mbd-non-composite'></div>
        <label for='ms-non-composite' class='underline'>Ms - Nominal section moment capacity </label>
        <div id='ms-non-composite'></div>
        <label for='ømb-non-composite' class='underline'>øMb</label>
        <div id='ømb-non-composite'></div>
        
        
        
        
        
        
    </div>
    
    
    <script>
        var joistSizeDropDown = document.getElementById('joist-size-dd');
        var joistSpacingDropDown = document.getElementById('joist-spacing-dd');
        var firstHoleLocationDropDown = document.getElementById('first-hole-location-dd');
        var sdlInput = document.getElementById('sdl-input');
        var liveLoadInput = document.getElementById('live-load-input');
        var deflectionLimitDropDown = document.getElementById('deflection-limit-dd');
        
        var joistNonCompositeElement = document.getElementById('joist-non-composite');
        var btmNonCompositeElement = document.getElementById('btm-non-composite');
        var centroidYNonCompositeElement = document.getElementById('centroid-Y-non-composite');
        var areaANonCompositeElement = document.getElementById('area-a-non-composite');
        var i1NonCompositeElement = document.getElementById('i-1-non-composite');
        var i2NonCompositeElement = document.getElementById('i-2-non-composite');
        var i3NonCompositeElement = document.getElementById('i-3-non-composite');
        var i4NonCompositeElement = document.getElementById('i-4-non-composite');
        var i5NonCompositeElement = document.getElementById('i-5-non-composite');
        var i6NonCompositeElement = document.getElementById('i-6-non-composite');
        var i7NonCompositeElement = document.getElementById('i-7-non-composite');
        var i8NonCompositeElement = document.getElementById('i-8-non-composite');
        var i9NonCompositeElement = document.getElementById('i-9-non-composite');
        var i10NonCompositeElement = document.getElementById('i-10-non-composite');
        var iNonCompositeElement = document.getElementById('i-non-composite');
        var ztNonCompositeElement = document.getElementById('zt-non-composite');
        var zbNonCompositeElement = document.getElementById('zb-non-composite');
        var phiNonCompositeElement = document.getElementById('phi-non-composite');
        var phimNonCompositeElement = document.getElementById('phim-non-composite');
        var circularHoleNonCompositeElement = document.getElementById('circular-hole-non-composite');
        var nonCircularHoleNonCompositeElement = document.getElementById('non-circular-hole-non-composite');
        var fyNonCompositeElement = document.getElementById('fy-non-composite');
        var eNonCompositeElement = document.getElementById('e-non-composite');
        var vNonCompositeElement = document.getElementById('v-non-composite');
        var kNonCompositeElement = document.getElementById('k-non-composite');
        var tNonCompositeElement = document.getElementById('t-non-composite')
        var bNonCompositeElement = document.getElementById('b-non-composite');
        var fcrNonCompositeElement = document.getElementById('fcr-non-composite');
        var fAsteriskNonCompositeElement = document.getElementById('f-asterisk-non-composite');
        var lamdaNonCompositeElement = document.getElementById('lamda-non-composite');
        var pNonCompositeElement = document.getElementById('p-non-composite');
        var beNonCompositeElement = document.getElementById('be-non-composite');
        var psiNonCompositeElement = document.getElementById('psi-non-composite');
        var be1NonCompositeElement = document.getElementById('be-1-non-composite');
        var be2NonCompositeElement = document.getElementById('be-2-non-composite');
        var i51NonCompositeElement = document.getElementById('i-51-non-composite');
        var d52NonCompositeElement = document.getElementById('d-52-non-composite');
        var i52NonCompositeElement = document.getElementById('i-52-non-composite');
        var kvNonCompositeElement = document.getElementById('kv-non-composite');
        var d1NonCompositeElement = document.getElementById('d-1-non-composite');
        var d1OverTNonCompositeElement = document.getElementById('d-1-over-t-non-composite');
        var ekvOverFyNonCompositeElement = document.getElementById('ekv-Over-fy-non-composite');
        var q1NonCompositeElement = document.getElementById('q1-non-composite');
        var q2NonCompositeElement = document.getElementById('q2-non-composite');
        var q3NonCompositeElement = document.getElementById('q3-non-composite');
        var q4NonCompositeElement = document.getElementById('q4-non-composite');
        var q5NonCompositeElement = document.getElementById('q5-non-composite');
        var qNonCompositeElement = document.getElementById('q-non-composite');
        var phi2NonCompositeElement = document.getElementById('phi-non-composite-2');
        var phiHoleNonCompositeElement = document.getElementById('phi-hole-non-composite');
        var phivNonCompositeElement = document.getElementById('phiv-non-composite');
        var phivCirHoleNonCompositeElement = document.getElementById('phiv-cir-hole-non-composite');
        var phivNonCirHoleNonCompositeElement = document.getElementById('phiv-non-cir-hole-non-composite');
        var tOverD1TimesEkvOverFyNonCompositeElement = document.getElementById('t-over-d1-times-ekv-over-fy-non-composite');
        var d1OverTTimesFyOverEkvNonCompositeElement = document.getElementById('d1-over-t-times-fy-over-ekv-non-composite');
        var ekvOverFyMultipliedNonCompositeElement = document.getElementById('ekv-over-fy-multiplied-non-composite');
        var ekvfy1NonCompositeElement = document.getElementById('ekvfy1-non-composite');
        var cCircularNonCompositeElement = document.getElementById('c-circular-non-composite');
        var qsCircularNonCompositeElement = document.getElementById('qs-circular-non-composite');
        var vcrNonCompositeElement = document.getElementById('vcr-non-composite');
        var vyNonCompositeElement = document.getElementById('vy-non-composite');
        var lamdaVNonCompositeElement = document.getElementById('lamda-v-non-composite');
        var ekvfy2NonCompositeElement = document.getElementById('ekvfy2-non-composite');
        var cNonCircularNonCompositeElement = document.getElementById('c-noncircular-non-composite');
        var qsNonCircularNonCompositeElement = document.getElementById('qs-noncircular-non-composite');
        
        var øNonCompositeElement = document.getElementById('ø-non-composite');
        var aNonCompositeElement = document.getElementById('a-non-composite');
        var cbNonCompositeElement = document.getElementById('cb-non-composite');
        var folNonCompositeElement = document.getElementById('fol-non-composite');
        var fodNonCompositeElement = document.getElementById('fod-non-composite');
        var fy2NonCompositeElement = document.getElementById('fy-non-composite2');
        var gNonCompositeElement = document.getElementById('g-non-composite');
        var jNonCompositeElement = document.getElementById('j-non-composite');
        var zcNonCompositeElement = document.getElementById('zc-non-composite');
        var iexNonCompositeElement = document.getElementById('iex-non-composite');
        var ieyNonCompositeElement = document.getElementById('iey-non-composite');
        var iezNonCompositeElement = document.getElementById('iez-non-composite');
        var iwNonCompositeElement = document.getElementById('iw-non-composite');
        var rxNonCompositeElement = document.getElementById('rx-non-composite');
        var ryNonCompositeElement = document.getElementById('ry-non-composite');
        var x0NonCompositeElement = document.getElementById('x0-non-composite');
        var zfNonCompositeElement = document.getElementById('zf-non-composite');
        var y0NonCompositeElement = document.getElementById('y0-non-composite');
        var rolNonCompositeElement = document.getElementById('rol-non-composite');
        var foyNonCompositeElement = document.getElementById('foy-non-composite');
        var fozNonCompositeElement = document.getElementById('foz-non-composite');
        var moNonCompositeElement = document.getElementById('mo-non-composite');
        var myNonCompositeElement = document.getElementById('my-non-composite');
        var λbNonCompositeElement = document.getElementById('λb-non-composite');
        var mcNonCompositeElement = document.getElementById('mc-non-composite');
        var mbeNonCompositeElement = document.getElementById('mbe-non-composite');
        var molNonCompositeElement = document.getElementById('mol-non-composite');
        var λlNonCompositeElement = document.getElementById('λl-non-composite');
        var mblNonCompositeElement = document.getElementById('mbl-non-composite');
        var modNonCompositeElement = document.getElementById('mod-non-composite');
        var λdNonCompositeElement = document.getElementById('λd-non-composite');
        var mbdNonCompositeElement = document.getElementById('mbd-non-composite');
        var msNonCompositeElement = document.getElementById('ms-non-composite');
        var ømbNonCompositeElement = document.getElementById('ømb-non-composite');
        
        var testElement = document.getElementById('testing');
        
        const joistData = {
            5.905511805 :   { weight : 6.2493114675, area : 1.8383036766, lx : 12.25275, rx : 2.56692913124, sx : 2.88642308348064, j : 9.2256, cw : 7.820184414, lxd : 12.25275, sxe : 2.88642308348064, mr : 10.7684052, vr : 14.43273419651563, vrh : 'NA'},
            7.87401574 :    { weight : 7.0556742375, area : 2.0723541447, lx : 22.5835, rx : 3.29527558719, sx : 4.27776444295968, j : 10.739175, cw : 12.288861222, lxd : 22.5835, sxe : 4.27776444295968, mr : 16.0050954, vr : 20.72738462490251, vrh : 'NA'},
            9.842519675 :   { weight : 7.8620370075, area : 2.3048546097, lx : 36.9985, rx : 3.99999999592, sx : 5.84607465956544, j : 12.468975, cw : 18.991876434, lxd : 36.75825, sxe : 5.83386991079808, mr : 21.8318352, vr : 20.95219356877347, vrh : 7.283809781419104},
            11.81102361 :   { weight : 8.6683997775, area : 2.5373550747, lx : 55.738, rx : 4.6850393653, sx : 7.58525135891424, j : 13.285825, cw : 27.556840316, lxd : 55.01725, sxe : 7.10316378260352, mr : 26.6259882, vr : 18.68162323567678, vrh : 9.037319543612592},
            13.779527545 :  { weight : 9.4747625475, area : 2.7698555397, lx : 79.52275, rx : 5.3543307032, sx : 9.49529454100608, j : 14.727325, cw : 37.983752868, lxd : 77.60075, sxe : 8.79962386126656, mr : 32.9690214, vr : 15.7141451765801, vrh : 4.94579676516112},
            15.74803148 :   { weight : 10.21392842, area : 3.0023560047, lx : 108.593, rx : 6.01181101749, sx : 11.5639994570736, j : 16.216875, cw : 50.645003824, lxd : 104.98925, sxe : 10.6181314276032, mr : 39.828348, vr : 13.55597931541889, vrh : 6.137284167677208},
            17.716535415 :  { weight : 11.02029119, area : 3.2348564697, lx : 143.42925, rx : 6.65748030817, sx : 13.7913661071168, j : 17.850575, cw : 65.540593184, lxd : 137.66325, sxe : 12.54648173284608, mr : 47.0564556, vr : 11.91487402516088, vrh : 7.036519943161048},
        }
        const slabData = {
            3.5 : {  
                5.905511805 :   { lxc : 28.83, mrc : 16.3001202, vr : 14.43273419651563, vrh : 'NA' },
                7.87401574 :    { lxc : 57.41975, mrc : 25.5196452, vr : 20.72738462490251, vrh : 'NA' },
                9.842519675 :   { lxc : 92.01575, mrc : 34.1491206, vr : 20.95219356877347, vrh : 7.283809781419104 },
                11.81102361 :   { lxc : 131.657, mrc : 42.3360588, vr : 18.68162323567678, vrh : 9.037319543612592 },
                13.779527545 :  { lxc : 179.46675, mrc : 51.0392904, vr : 15.7141451765801, vrh : 4.94579676516112 },
                15.74803148 :   { lxc : 235.9255, mrc : 60.2588154, vr : 13.55597931541889, vrh : 6.137284167677208 },
                17.716535415 :  { lxc : 301.2735, mrc : 69.9208776, vr : 11.91487402516088, vrh : 7.036519943161048 },
            },
            4.0 : {
                5.905511805 :   { lxc : 29.3105, mrc : 15.6363144, vr : 14.43273419651563, vrh : 'NA' },
                7.87401574 :    { lxc : 57.90025, mrc : 24.4870584, vr : 20.72738462490251, vrh : 'NA' },
                9.842519675 :   { lxc : 99.22325, mrc : 35.402976, vr : 20.95219356877347, vrh : 7.283809781419104 },
                11.81102361 :   { lxc : 144.39025, mrc : 44.6962572, vr : 18.68162323567678, vrh : 9.037319543612592 },
                13.779527545 :  { lxc : 196.044, mrc : 53.7682698, vr : 15.7141451765801, vrh : 4.94579676516112 },
                15.74803148 :   { lxc : 257.0675, mrc : 63.3565758, vr : 13.55597931541889, vrh : 6.137284167677208 },
                17.716535415 :  { lxc : 327.701, mrc : 73.4611752, vr : 11.91487402516088, vrh : 7.036519943161048 },
            },
        }
        
        const nonCompositeTableA = {
            150 : 9.288, 200 : 10.5, 250 : 11.62, 300 : 12.84, 350 : 14.07, 400 : 15.19, 450 : 16.41
        }
        const nonCompositeTableB = {
            150 : { area : 1186, rx : 65.2, ry : 18.5, x0 : 31.7, sx : 47.3, sxe : 47.3, j : 3.84, cw : 2.1, y0 : 60.5 },
            200 : { area : 1337, rx : 83.7, ry : 17.6, x0 : 27.1, sx : 70.1, sxe : 70.1, j : 4.47, cw : 3.3, y0 : 66.5 },
            250 : { area : 1487, rx : 101.6, ry : 16.7, x0 : 23.7, sx : 95.8, sxe : 95.6, j : 5.19, cw : 5.1, y0 : 70.7 },
            300 : { area : 1637, rx : 119.0, ry : 16.0, x0 : 21.1, sx : 124.3, sxe : 116.4, j : 5.53, cw : 7.4, y0 : 73.8 },
            350 : { area : 1787, rx : 136.0, ry : 15.4, x0 : 19.1, sx : 155.6, sxe : 144.2, j : 6.13, cw : 10.2, y0 : 76.3 },
            400 : { area : 1937, rx : 152.7, ry : 14.8, x0 : 17.4, sx : 189.5, sxe : 174.0, j : 6.75, cw : 13.6, y0 : 78.2 },
            550 : { area : 2087, rx : 169.1, ry : 14.3, x0 : 16.0, sx : 226.0, sxe : 205.6, j : 7.43, cw : 17.6, y0 : 79.9 }
        }
        
        var summitedData = {
            joistSize : 0, joistSpacing : 0, firstHoleLocation : 0, sdl : 0, liveLoad : 0, deflectionLimit : 0
        }
        
        var calculatedNonCompositeFigures = {
            joist : 0, btm : 35, centroidY : 0, areaA : 0, i1 : 0, i2 : 0, i3 : 0, i4 : 0, i5 : 0, i6 : 0, i7 : 0, i8 : 0, i9 : 0, i10 : 0, i : 0, zt : 0, zb : 0, phi : 0.9, phim : 0,
            circularHole : 0, nonCircularHole : 0, fy : 345, e : 200000, v : 0.3, k : 0, t : 3, b : 0, fcr : 0, fAsterisk : 0, lamda : 0, p : 0, be : 0, psi : 0, be1 : 0, be2 : 0,
            i51 : 0, d52 : 0, i52 : 0, kv : 5.34, d1 : 0, d1OverT : 0, ekvOverFy : 0, q1 : 0, q2 : 0, q3 : 0, q4 : 0, q5 : 0, q : 0, phiHole : 0.8, phiv : 0, phivCirHole : 0,
            phivNonCirHole : 0, tOverD1TimesEkvOverFy : 0, d1OverTTimesFyOverEkv : 0, ekvOverFyMultiplied : 0, ekvfy1 : 0, cCircular : 0, qsCircular : 0, vcr : 0, vy : 0,
            lamdaV : 0, ekvfy2 : 0, cNonCircular : 0, qsNonCircular : 0, ø : 0.9, a : 0, cb : 1.1589, fol : 1385, fod : 729, g : 80000, j : 0, zc : 0, iex : 13300, iey : 609.6, iez : 609.6, iw : 0,
            x0 : 0, zf : 0, y0 : 0, rol : 0, foy : 0, foz : 0, mo : 0, my : 0, λb : 0, mc : 0, fc : 0, mbe : 0, mol : 0, λl : 0, mbl : 0, mod : 0 , λd : 0,  mbd : 0, ms : 0,
            ømb : 0
        }
        
        function CorrectInputValue(minimus, maximus, val, ident, decimals){
            var returnValue;
            if (val < minimus)
                returnValue = minimus;
            else if (val > maximus)
                returnValue = maximus;
            else
                returnValue = Round(val, decimals);
            document.getElementById(ident).value = returnValue;
        }
        
        function SubmitData(){
            if (CheckForInputValues() === false){
                TestFunction("NEED TO COMPLETE");
                return
            }
            
            SaveSummitedData();
            
            CalculateNonCompositeFigures();
            
            DisplayCalculatedData();
        }
        function CheckForInputValues(){
            if (sdlInput.value.length !== 0 && liveLoadInput.value.length !== 0)
                return true;
            return false;
        }
        
        
        function SaveSummitedData(){
            summitedData['joistSize'] = joistSizeDropDown.value;
            summitedData['joistSpacing'] = joistSpacingDropDown.value;
            summitedData['firstHoleLocation'] = firstHoleLocationDropDown.value;
            summitedData['sdl'] = sdlInput.value;
            summitedData['liveLoad'] = liveLoadInput.value;
            summitedData['deflectionLimit'] = deflectionLimitDropDown.value;
        }
        
        function CalculateNonCompositeFigures(){
            calculatedNonCompositeFigures['joist'] = RoundDown(summitedData['joistSize'] / 0.0393700787);
            
            calculatedNonCompositeFigures['centroidY'] = ((1.5)*(60*3)+2*(29/2+3)*(29*3)+(3/2+32)*(27.5*3)+(3/2+32)*(31.5*3)+((calculatedNonCompositeFigures['joist']-35)/2+35)*((calculatedNonCompositeFigures['joist']-35)*3)+(3/2+calculatedNonCompositeFigures['joist'])*(40*3)+(15/2+3+calculatedNonCompositeFigures['joist'])*(15*3)+(3/2+18+calculatedNonCompositeFigures['joist'])*(25*3)+(14/2+21+calculatedNonCompositeFigures['joist'])*(14*3)+(3/2+35+calculatedNonCompositeFigures['joist'])*(23*3))/((60*3)+2*(29*3)+(27.5*3)+(31.5*3)+((calculatedNonCompositeFigures['joist']-35)*3)+(40*3)+(15*3)+(25*3)+(14*3)+(23*3));
            
            calculatedNonCompositeFigures['areaA'] = (60*3)+2*(29*3)+(27.5*3)+(31.5*3)+((calculatedNonCompositeFigures['joist']-35)*3)+(40*3)+(15*3)+(25*3)+(14*3)+(23*3);
            
            calculatedNonCompositeFigures['circularHole'] = calculatedNonCompositeFigures['joist'] < 250 ? 0 : calculatedNonCompositeFigures['joist'] < 400 ? 125 : 250;
            
            calculatedNonCompositeFigures['nonCircularHole'] = calculatedNonCompositeFigures['joist'] < 350 ? 0 : 200;
            
            calculatedNonCompositeFigures['psi'] = -1 * (calculatedNonCompositeFigures['centroidY']-calculatedNonCompositeFigures['btm'])/(calculatedNonCompositeFigures['joist']-calculatedNonCompositeFigures['centroidY']);
            
            calculatedNonCompositeFigures['k'] = 4+2*Math.pow(1-calculatedNonCompositeFigures['psi'], 3)+2*(1-calculatedNonCompositeFigures['psi']);
            
            calculatedNonCompositeFigures['b'] = calculatedNonCompositeFigures['joist']-calculatedNonCompositeFigures['centroidY'];
            
            calculatedNonCompositeFigures['fcr'] = calculatedNonCompositeFigures['k']*Math.pow(Math.PI, 2)*calculatedNonCompositeFigures['e']/(12*(1-Math.pow(calculatedNonCompositeFigures['v'], 2)))*Math.pow(calculatedNonCompositeFigures['t']/calculatedNonCompositeFigures['b'], 2);
            
            calculatedNonCompositeFigures['fAsterisk'] = calculatedNonCompositeFigures['fy']*(calculatedNonCompositeFigures['joist']-calculatedNonCompositeFigures['centroidY'])/(calculatedNonCompositeFigures['joist']+38-calculatedNonCompositeFigures['centroidY']);
            
            calculatedNonCompositeFigures['lamda'] = Math.sqrt(calculatedNonCompositeFigures['fAsterisk']/calculatedNonCompositeFigures['fcr']);
            
            calculatedNonCompositeFigures['p'] = (1-0.22/calculatedNonCompositeFigures['lamda'])/calculatedNonCompositeFigures['lamda'] > 1 ? 1 : (1-0.22/calculatedNonCompositeFigures['lamda'])/calculatedNonCompositeFigures['lamda'];
            
            calculatedNonCompositeFigures['be'] = calculatedNonCompositeFigures['lamda'] > 0.673 ? calculatedNonCompositeFigures['p']*calculatedNonCompositeFigures['b'] : calculatedNonCompositeFigures['b'];
            
            calculatedNonCompositeFigures['be1'] = calculatedNonCompositeFigures['be']/(3-calculatedNonCompositeFigures['psi'])
            
            calculatedNonCompositeFigures['be2'] = (calculatedNonCompositeFigures['joist']+38)/23 > 4 ? (calculatedNonCompositeFigures['be']/(1-calculatedNonCompositeFigures['psi']))-calculatedNonCompositeFigures['be1'] : calculatedNonCompositeFigures['psi'] > -0.236 ? calculatedNonCompositeFigures['be']-calculatedNonCompositeFigures['be1'] : calculatedNonCompositeFigures['be']/2;
            
            calculatedNonCompositeFigures['i51'] = 3*Math.pow(calculatedNonCompositeFigures['be1'], 3)/12+3*calculatedNonCompositeFigures['be1']*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']-calculatedNonCompositeFigures['be1']/2), 2);
            
            calculatedNonCompositeFigures['d52'] = calculatedNonCompositeFigures['centroidY']-calculatedNonCompositeFigures['btm']+calculatedNonCompositeFigures['be2'];
            
            calculatedNonCompositeFigures['i52'] = 3*Math.pow(calculatedNonCompositeFigures['d52'], 3)/12+3*calculatedNonCompositeFigures['d52']*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['btm']+calculatedNonCompositeFigures['d52']/2), 2);
            
            calculatedNonCompositeFigures['i1'] = (60*Math.pow(3, 3))/12+(60*3)*Math.pow(calculatedNonCompositeFigures['centroidY']-3/2, 2);
            
            calculatedNonCompositeFigures['i2'] = 2*(3*Math.pow(29, 3)/12+3*29*Math.pow(calculatedNonCompositeFigures['centroidY']-(29/2+3), 2));
            
            calculatedNonCompositeFigures['i3'] = 27.5*Math.pow(3, 3)/12+27.5*3*Math.pow(calculatedNonCompositeFigures['centroidY']-(3/2+32), 2);
            
            calculatedNonCompositeFigures['i4'] = 31.5*Math.pow(3, 3)/12+31.5*3*Math.pow(calculatedNonCompositeFigures['centroidY']-(3/2+32), 2);
            
            calculatedNonCompositeFigures['i5'] = calculatedNonCompositeFigures['i51']+calculatedNonCompositeFigures['i52'];
            
            calculatedNonCompositeFigures['i6'] = 40*Math.pow(3, 3)/12+40*3*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']+3/2), 2);
            
            calculatedNonCompositeFigures['i7'] = 3*Math.pow(15, 3)/12+3*15*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']+3+15/2), 2);
            
            calculatedNonCompositeFigures['i8'] = 25*Math.pow(3, 3)/12+25*3*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']+18+3/2), 2);
            
            calculatedNonCompositeFigures['i9'] = 3*Math.pow(14, 3)/12+3*14*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']+21+14/2), 2);
            
            calculatedNonCompositeFigures['i10'] = 23*Math.pow(3, 3)/12+23*3*Math.pow(calculatedNonCompositeFigures['centroidY']-(calculatedNonCompositeFigures['joist']+35+3/2), 2);
            
            calculatedNonCompositeFigures['i'] =    calculatedNonCompositeFigures['i1'] + calculatedNonCompositeFigures['i2'] + calculatedNonCompositeFigures['i3'] + 
                                                    calculatedNonCompositeFigures['i4'] + calculatedNonCompositeFigures['i5'] + calculatedNonCompositeFigures['i6'] + 
                                                    calculatedNonCompositeFigures['i7'] + calculatedNonCompositeFigures['i8'] + calculatedNonCompositeFigures['i9'] + 
                                                    calculatedNonCompositeFigures['i10']; // must go down after all i#
            
            calculatedNonCompositeFigures['zt'] = calculatedNonCompositeFigures['joist'] < 300 ? calculatedNonCompositeFigures['i']/(calculatedNonCompositeFigures['joist']+38-calculatedNonCompositeFigures['centroidY']) : (calculatedNonCompositeFigures['i']/(calculatedNonCompositeFigures['joist']+38-calculatedNonCompositeFigures['centroidY']))*0.95;
            
            calculatedNonCompositeFigures['zb'] = calculatedNonCompositeFigures['joist'] < 300 ? calculatedNonCompositeFigures['i']/calculatedNonCompositeFigures['centroidY'] : 1.05*(calculatedNonCompositeFigures['i']/calculatedNonCompositeFigures['centroidY']);
            
            calculatedNonCompositeFigures['phim'] = calculatedNonCompositeFigures['phi']*calculatedNonCompositeFigures['fy']*Math.min(calculatedNonCompositeFigures['zt'], calculatedNonCompositeFigures['zb'])/Math.pow(10, 6);
            
            calculatedNonCompositeFigures['d1'] = calculatedNonCompositeFigures['joist']-calculatedNonCompositeFigures['btm'];
            
            calculatedNonCompositeFigures['d1OverT'] = calculatedNonCompositeFigures['d1']/calculatedNonCompositeFigures['t'];
            
            calculatedNonCompositeFigures['ekvOverFy'] = Math.sqrt(calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']/calculatedNonCompositeFigures['fy']);
            
            calculatedNonCompositeFigures['q1'] = (60*3)*(calculatedNonCompositeFigures['centroidY']-3/2);
            
            calculatedNonCompositeFigures['q2'] = 2*(3*29*(calculatedNonCompositeFigures['centroidY']-(29/2+3)));
            
            calculatedNonCompositeFigures['q3'] = 27.5*3*(calculatedNonCompositeFigures['centroidY']-(3/2+32));
            
            calculatedNonCompositeFigures['q4'] = 31.5*3*(calculatedNonCompositeFigures['centroidY']-(3/2+32));
            
            calculatedNonCompositeFigures['q5'] = 3*(calculatedNonCompositeFigures['centroidY']-calculatedNonCompositeFigures['btm'])*(calculatedNonCompositeFigures['centroidY']-((calculatedNonCompositeFigures['centroidY']-calculatedNonCompositeFigures['btm'])/2+calculatedNonCompositeFigures['btm']));
            
            calculatedNonCompositeFigures['q'] =    calculatedNonCompositeFigures['q1'] + calculatedNonCompositeFigures['q2'] + calculatedNonCompositeFigures['q3'] +
                                                    calculatedNonCompositeFigures['q4'] + calculatedNonCompositeFigures['q5'];
            
            calculatedNonCompositeFigures['tOverD1TimesEkvOverFy'] = Math.sqrt(2*calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']/calculatedNonCompositeFigures['fy'])*(calculatedNonCompositeFigures['t']/calculatedNonCompositeFigures['d1']);
            
            calculatedNonCompositeFigures['d1OverTTimesFyOverEkv'] = calculatedNonCompositeFigures['d1OverT']*Math.sqrt(calculatedNonCompositeFigures['fy']/(calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']));
            
            calculatedNonCompositeFigures['ekvOverFyMultiplied'] = 1.415*calculatedNonCompositeFigures['ekvOverFy'];
            
            calculatedNonCompositeFigures['ekvfy1'] = 0.64*Math.pow(calculatedNonCompositeFigures['t'], 2)*Math.sqrt(calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']*calculatedNonCompositeFigures['fy']);
            
            calculatedNonCompositeFigures['cCircular'] = calculatedNonCompositeFigures['d1']/2-calculatedNonCompositeFigures['circularHole']/2.83;
            
            calculatedNonCompositeFigures['qsCircular'] = calculatedNonCompositeFigures['cCircular']/calculatedNonCompositeFigures['t'] >= 54 ? 1 : calculatedNonCompositeFigures['cCircular']/(54*calculatedNonCompositeFigures['t']);
            
            calculatedNonCompositeFigures['vcr'] = 0.904*calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']*Math.pow(calculatedNonCompositeFigures['t'], 3)/calculatedNonCompositeFigures['d1'];
            
            calculatedNonCompositeFigures['vy'] = 0.6*calculatedNonCompositeFigures['d1']*calculatedNonCompositeFigures['t']*calculatedNonCompositeFigures['fy'];
            
            calculatedNonCompositeFigures['lamdaV'] = Math.sqrt(calculatedNonCompositeFigures['vy']/calculatedNonCompositeFigures['vcr']);
            
            calculatedNonCompositeFigures['ekvfy2'] = 0.6*Math.pow(calculatedNonCompositeFigures['t'], 2)*Math.sqrt(calculatedNonCompositeFigures['e']*calculatedNonCompositeFigures['kv']*calculatedNonCompositeFigures['fy']);
            
            calculatedNonCompositeFigures['cNonCircular'] = calculatedNonCompositeFigures['d1']/2-calculatedNonCompositeFigures['nonCircularHole']/2;
            
            calculatedNonCompositeFigures['qsNonCircular'] = calculatedNonCompositeFigures['cNonCircular']/calculatedNonCompositeFigures['t'] >=54 ? 1 : calculatedNonCompositeFigures['cNonCircular']/(54*calculatedNonCompositeFigures['t']);
            
            var phivGrab;
            if (0.815<calculatedNonCompositeFigures['lamdaV'] && calculatedNonCompositeFigures['lamdaV']<1.227) {
                phivGrab = calculatedNonCompositeFigures['phi'] * AH13;
            }
            else if (calculatedNonCompositeFigures['lamdaV']>1.227){
                phivGrab = calculatedNonCompositeFigures['phi']*(calculatedNonCompositeFigures['ekvfy2']*calculatedNonCompositeFigures['tOverD1TimesEkvOverFy'])/1000;
            }
            else {
                phivGrab = calculatedNonCompositeFigures['phi']*(calculatedNonCompositeFigures['ekvfy2']*calculatedNonCompositeFigures['d1OverTTimesFyOverEkv'])/1000;
            }
                                                   
            calculatedNonCompositeFigures['phiv'] = phivGrab;
            
            calculatedNonCompositeFigures['phivCirHole'] = (calculatedNonCompositeFigures['circularHole'] == 0 ? '' : calculatedNonCompositeFigures['phiv']*calculatedNonCompositeFigures['qsCircular']/calculatedNonCompositeFigures['phi']*calculatedNonCompositeFigures['phiHole']);
            
            calculatedNonCompositeFigures['phivNonCirHole'] = (calculatedNonCompositeFigures['nonCircularHole'] == 0 ? "" : calculatedNonCompositeFigures['phiv']*calculatedNonCompositeFigures['qsNonCircular']/calculatedNonCompositeFigures['phi']*calculatedNonCompositeFigures['phiHole']);
            
            calculatedNonCompositeFigures['a'] = nonCompositeTableB[calculatedNonCompositeFigures['joist']]['area'];
            
            calculatedNonCompositeFigures['j'] = 1000 * nonCompositeTableB[calculatedNonCompositeFigures['joist']]['j'];
            
            calculatedNonCompositeFigures['zc'] = 1000 * nonCompositeTableB[calculatedNonCompositeFigures['joist']]['sxe'];
            
            calculatedNonCompositeFigures['iw'] = 1000000000 * nonCompositeTableB[calculatedNonCompositeFigures['joist']]['cw'];
            
            calculatedNonCompositeFigures['rx'] = nonCompositeTableB[calculatedNonCompositeFigures['joist']]['rx'];
            
            calculatedNonCompositeFigures['ry'] = nonCompositeTableB[calculatedNonCompositeFigures['joist']]['ry'];
            
            calculatedNonCompositeFigures['x0'] = nonCompositeTableB[calculatedNonCompositeFigures['joist']]['x0'];
            
            calculatedNonCompositeFigures['zf'] = 1000 * nonCompositeTableB[calculatedNonCompositeFigures['joist']]['sx'];
            
            calculatedNonCompositeFigures['y0'] = nonCompositeTableB[calculatedNonCompositeFigures['joist']]['y0'];
            
            calculatedNonCompositeFigures['rol'] = Math.sqrt(Math.pow(calculatedNonCompositeFigures['rx'], 2) + Math.pow(calculatedNonCompositeFigures['ry'], 2) + Math.pow(calculatedNonCompositeFigures['x0'], 2) + Math.pow(calculatedNonCompositeFigures['y0'], 2));
            
            calculatedNonCompositeFigures['foy'] = (Math.pow(Math.PI, 2) * 200000) / Math.pow(calculatedNonCompositeFigures['iey']/calculatedNonCompositeFigures['ry'], 2);
            
            calculatedNonCompositeFigures['foz'] = ((calculatedNonCompositeFigures['g']*calculatedNonCompositeFigures['j'])/(calculatedNonCompositeFigures['a']*Math.pow(calculatedNonCompositeFigures['rol'], 2)))*(1+(Math.pow(Math.PI, 2)*200000*calculatedNonCompositeFigures['iw'])/(calculatedNonCompositeFigures['g']*calculatedNonCompositeFigures['j']*Math.pow(calculatedNonCompositeFigures['iez'], 2)));
        
            calculatedNonCompositeFigures['mo'] = calculatedNonCompositeFigures['cb']*calculatedNonCompositeFigures['a']*calculatedNonCompositeFigures['rol']*Math.sqrt(calculatedNonCompositeFigures['foy']*calculatedNonCompositeFigures['foz']);
        
            calculatedNonCompositeFigures['my'] = calculatedNonCompositeFigures['zf']*calculatedNonCompositeFigures['fy'];
            
            calculatedNonCompositeFigures['λb'] = Math.sqrt(calculatedNonCompositeFigures['my']/calculatedNonCompositeFigures['mo']);
            
            calculatedNonCompositeFigures['mc'] = calculatedNonCompositeFigures['λb'] <= 0.6 ? calculatedNonCompositeFigures['my'] : calculatedNonCompositeFigures['λb'] >= 1.336 ? calculatedNonCompositeFigures['my'] * (1/Math.pow(calculatedNonCompositeFigures['λb'], 2)) : 1.11*calculatedNonCompositeFigures['my']*(1-(10*Math.pow(calculatedNonCompositeFigures['λb'], 2)/36));
        
            calculatedNonCompositeFigures['mbe'] = calculatedNonCompositeFigures['mo'] < 0.56 * calculatedNonCompositeFigures['my'] ? calculatedNonCompositeFigures['mo'] : calculatedNonCompositeFigures['mo'] > 2.78 * calculatedNonCompositeFigures['my'] ? calculatedNonCompositeFigures['my'] : 10/9 * calculatedNonCompositeFigures['my'] * (1-(10 * calculatedNonCompositeFigures['my'])/(36 * calculatedNonCompositeFigures['mo']));
        
            calculatedNonCompositeFigures['mol'] = calculatedNonCompositeFigures['zf'] * calculatedNonCompositeFigures['fol'];
            
            calculatedNonCompositeFigures['λl'] = Math.sqrt(calculatedNonCompositeFigures['mbe']/calculatedNonCompositeFigures['mol']);
            
            calculatedNonCompositeFigures['mbl'] = calculatedNonCompositeFigures['λl'] <= 0.776 ? calculatedNonCompositeFigures['mbe'] : (1 - 0.15 * Math.pow(calculatedNonCompositeFigures['mol'] / calculatedNonCompositeFigures['mbe'], 0.4)) * Math.pow(calculatedNonCompositeFigures['mol'] / calculatedNonCompositeFigures['mbe'], 0.4) * calculatedNonCompositeFigures['mbe'];
        
            calculatedNonCompositeFigures['mod'] = calculatedNonCompositeFigures['zf'] * calculatedNonCompositeFigures['fod'];
            
            calculatedNonCompositeFigures['λd'] = Math.sqrt(calculatedNonCompositeFigures['my']/calculatedNonCompositeFigures['mod']);
            
            calculatedNonCompositeFigures['mbd'] = calculatedNonCompositeFigures['λd'] <= 0.673 ? calculatedNonCompositeFigures['my'] : (1 - 0.22 * Math.pow(calculatedNonCompositeFigures['mod'] / calculatedNonCompositeFigures['my'], 0.5)) * Math.pow(calculatedNonCompositeFigures['mod']/calculatedNonCompositeFigures['my'], 0.5) * calculatedNonCompositeFigures['my'];
        
            calculatedNonCompositeFigures['ms'] = calculatedNonCompositeFigures['zc']*calculatedNonCompositeFigures['fy'];
            
            calculatedNonCompositeFigures['ømb'] = 0.9 * Math.min(calculatedNonCompositeFigures['mbe'], calculatedNonCompositeFigures['mbl'], calculatedNonCompositeFigures['mbd'], calculatedNonCompositeFigures['ms']) / 1000000;
        }                                        
        
        function DisplayCalculatedData(){
            joistNonCompositeElement.innerHTML = calculatedNonCompositeFigures['joist'];
            btmNonCompositeElement.innerHTML = calculatedNonCompositeFigures['btm'];
            centroidYNonCompositeElement.innerHTML = calculatedNonCompositeFigures['centroidY'] + ' mm';
            areaANonCompositeElement.innerHTML = calculatedNonCompositeFigures['areaA'] + ' mm2';
            i1NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i1'] + ' mm4';
            i2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i2'] + ' mm4';
            i3NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i3'] + ' mm4';
            i4NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i4'] + ' mm4';
            i5NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i5'] + ' mm4';
            i6NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i6'] + ' mm4';
            i7NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i7'] + ' mm4';
            i8NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i8'] + ' mm4';
            i9NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i9'] + ' mm4';
            i10NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i10'] + ' mm4';
            iNonCompositeElement.innerHTML = calculatedNonCompositeFigures['i'] + ' mm4';
            ztNonCompositeElement.innerHTML = calculatedNonCompositeFigures['zt'] + ' mm3';
            zbNonCompositeElement.innerHTML = calculatedNonCompositeFigures['zb'] + ' mm3';
            phiNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phi'];
            phimNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phim'] + 'kNm';
    
            circularHoleNonCompositeElement.innerHTML = calculatedNonCompositeFigures['circularHole'] + ' dwh';
            nonCircularHoleNonCompositeElement.innerHTML = calculatedNonCompositeFigures['nonCircularHole'] + ' dwh';
            fyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['fy'] + ' MPa';
            eNonCompositeElement.innerHTML = calculatedNonCompositeFigures['e'] + 'MPa';
            vNonCompositeElement.innerHTML = calculatedNonCompositeFigures['v'];
            kNonCompositeElement.innerHTML = calculatedNonCompositeFigures['k'];
            tNonCompositeElement.innerHTML = calculatedNonCompositeFigures['t'] + ' mm';
            bNonCompositeElement.innerHTML = calculatedNonCompositeFigures['b'] + ' mm';
            fcrNonCompositeElement.innerHTML = calculatedNonCompositeFigures['fcr'] + ' MPa';
            fAsteriskNonCompositeElement.innerHTML = calculatedNonCompositeFigures['fAsterisk'] + ' MPa';
            lamdaNonCompositeElement.innerHTML = calculatedNonCompositeFigures['lamda'];
            pNonCompositeElement.innerHTML = calculatedNonCompositeFigures['p'];
            beNonCompositeElement.innerHTML = calculatedNonCompositeFigures['be'] + ' mm';
            psiNonCompositeElement.innerHTML = calculatedNonCompositeFigures['psi'];
            be1NonCompositeElement.innerHTML = calculatedNonCompositeFigures['be1'] + ' mm';
            be2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['be2'] + ' mm';
            i51NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i51'] + ' mm4';
            d52NonCompositeElement.innerHTML = calculatedNonCompositeFigures['d52'] + ' mm';
            i52NonCompositeElement.innerHTML = calculatedNonCompositeFigures['i52'] + ' mm4';
            
            kvNonCompositeElement.innerHTML = calculatedNonCompositeFigures['kv'];
            d1NonCompositeElement.innerHTML = calculatedNonCompositeFigures['d1'] + ' mm';
            d1OverTNonCompositeElement.innerHTML = calculatedNonCompositeFigures['d1OverT'];
            ekvOverFyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ekvOverFy'];
            q1NonCompositeElement.innerHTML = calculatedNonCompositeFigures['q1'] + ' mm3';
            q2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['q2'] + ' mm3';
            q3NonCompositeElement.innerHTML = calculatedNonCompositeFigures['q3'] + ' mm3';
            q4NonCompositeElement.innerHTML = calculatedNonCompositeFigures['q4'] + ' mm3';
            q5NonCompositeElement.innerHTML = calculatedNonCompositeFigures['q5'] + ' mm3';
            qNonCompositeElement.innerHTML = calculatedNonCompositeFigures['q'] + ' mm3';
            
            phi2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['phi'];
            phiHoleNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phiHole'];
            phivNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phiv'] + ' kN';
            phivCirHoleNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phivCirHole'] + ' kN';
            phivNonCirHoleNonCompositeElement.innerHTML = calculatedNonCompositeFigures['phivNonCirHole'] + ' kN';
            
            tOverD1TimesEkvOverFyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['tOverD1TimesEkvOverFy'];
            d1OverTTimesFyOverEkvNonCompositeElement.innerHTML = calculatedNonCompositeFigures['d1OverTTimesFyOverEkv'];
            ekvOverFyMultipliedNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ekvOverFyMultiplied'];
            ekvfy1NonCompositeElement.innerHTML = calculatedNonCompositeFigures['ekvfy1'];
            cCircularNonCompositeElement.innerHTML = calculatedNonCompositeFigures['cCircular'];
            qsCircularNonCompositeElement.innerHTML = calculatedNonCompositeFigures['qsCircular'];
            vcrNonCompositeElement.innerHTML = calculatedNonCompositeFigures['vcr'] + ' N';
            vyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['vy'] + ' N';
            lamdaVNonCompositeElement.innerHTML = calculatedNonCompositeFigures['lamdaV'];
            ekvfy2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['ekvfy2'];
            cNonCircularNonCompositeElement.innerHTML = calculatedNonCompositeFigures['cNonCircular'];
            qsNonCircularNonCompositeElement.innerHTML = calculatedNonCompositeFigures['qsNonCircular'];
            
            øNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ø'];
            aNonCompositeElement.innerHTML = calculatedNonCompositeFigures['a'] + ' mm2';
            cbNonCompositeElement.innerHTML = calculatedNonCompositeFigures['cb'];
            folNonCompositeElement.innerHTML = calculatedNonCompositeFigures['fol'] + ' MPa';
            fodNonCompositeElement.innerHTML = calculatedNonCompositeFigures['fod'] + ' MPa';
            fy2NonCompositeElement.innerHTML = calculatedNonCompositeFigures['fy'] + ' MPa';
            gNonCompositeElement.innerHTML = calculatedNonCompositeFigures['g'] + ' MPa';
            jNonCompositeElement.innerHTML = calculatedNonCompositeFigures['j'] + ' mm4';
            zcNonCompositeElement.innerHTML = calculatedNonCompositeFigures['zc'] + ' mm3';
            iexNonCompositeElement.innerHTML = calculatedNonCompositeFigures['iex'] + ' mm';
            ieyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['iey'] + ' mm';
            iezNonCompositeElement.innerHTML = calculatedNonCompositeFigures['iez'] + ' mm';
            iwNonCompositeElement.innerHTML = calculatedNonCompositeFigures['iw'] + ' mm6';
            rxNonCompositeElement.innerHTML = calculatedNonCompositeFigures['rx'] + ' mm';
            ryNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ry'] + ' mm';
            x0NonCompositeElement.innerHTML = calculatedNonCompositeFigures['x0'] + ' mm';
            zfNonCompositeElement.innerHTML = calculatedNonCompositeFigures['zf'] + ' mm3';
            y0NonCompositeElement.innerHTML = calculatedNonCompositeFigures['y0'] + ' mm';
            rolNonCompositeElement.innerHTML = calculatedNonCompositeFigures['rol'] + ' mm';
            foyNonCompositeElement.innerHTML = calculatedNonCompositeFigures['foy'] + ' MPa';
            fozNonCompositeElement.innerHTML = calculatedNonCompositeFigures['foz'] + ' MPa';
            moNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mo'] + ' Nmm';
            myNonCompositeElement.innerHTML = calculatedNonCompositeFigures['my'] + ' Nmm';
            λbNonCompositeElement.innerHTML = calculatedNonCompositeFigures['λb'];
            mcNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mc'] + ' Nmm';
            
            mbeNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mbe'] + ' Nmm';
            molNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mol'] + ' Nmm';
            λlNonCompositeElement.innerHTML = calculatedNonCompositeFigures['λl'];
            mblNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mbl'] + ' Nmm';
            modNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mod'] + ' Nmm';
            λdNonCompositeElement.innerHTML = calculatedNonCompositeFigures['λd'];
            mbdNonCompositeElement.innerHTML = calculatedNonCompositeFigures['mbd'] + ' Nmm';
            msNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ms'] + ' Nmm';
            ømbNonCompositeElement.innerHTML = calculatedNonCompositeFigures['ømb'] + ' kNm';
            
        }
        
        // The decimals is how many decimal places you would like to round to. 0 being integers, 1 being 1 decimal place, etc.
        function Round(val, decimals) {
            var multiplier = Math.pow(10, decimals || 0);
            return Math.round(val * multiplier) / multiplier;
        }
        
        function RoundDown(number, decimals) {
            decimals = decimals || 0;
            return ( Math.floor( number * Math.pow(10, decimals) ) / Math.pow(10, decimals) );
        }
        
        
        
        function TestFunction(val)
        {
            /*var tes = slabData[3.5][value]['mrc'];*/
            testElement.innerHTML = val;
        }
    </script>
</html>
